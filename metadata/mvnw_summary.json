{
  "file_name": "mvnw",
  "file_path": "mvnw",
  "file_summary": "This is `mvnw`, a shell script for the Apache Maven Wrapper. Its primary role is to provide a consistent way to build projects using a specific Maven version, ensuring all developers use the same toolchain without requiring a global Maven installation. It reads configuration from `.mvn/wrapper/maven-wrapper.properties` to determine the exact Maven or Maven Daemon (`mvnd`) distribution to use, including its download URL and an optional SHA-256 checksum for integrity verification. The script first checks if the required Maven distribution is already downloaded and cached in the user's local Maven repository (`~/.m2/wrapper/dists`). If not found, it orchestrates the download process, prioritizing `wget` or `curl`, and falling back to a dynamically compiled Java class (`Downloader.java`) if external command-line tools are unavailable. It handles platform-specific paths and `mvnd` native distributions. After downloading, validating (if a checksum is provided), and extracting the distribution, it executes the downloaded Maven command, passing through any command-line arguments, effectively wrapping the Maven execution. The script supports verbose logging and various environment variables for customization, such as `JAVA_HOME`, proxy settings, and custom repository URLs.",
  "attributes": [
    {
      "name": "JAVA_HOME",
      "data_type": "String",
      "membership_type": "Environment variable (optional)"
    },
    {
      "name": "MVNW_REPOURL",
      "data_type": "String",
      "membership_type": "Environment variable (optional)"
    },
    {
      "name": "MVNW_USERNAME",
      "data_type": "String",
      "membership_type": "Environment variable (optional)"
    },
    {
      "name": "MVNW_PASSWORD",
      "data_type": "String",
      "membership_type": "Environment variable (optional)"
    },
    {
      "name": "MVNW_VERBOSE",
      "data_type": "String",
      "membership_type": "Environment variable (optional)"
    },
    {
      "name": "JAVACMD",
      "data_type": "String",
      "membership_type": "Script-defined (path to Java executable)"
    },
    {
      "name": "JAVACCMD",
      "data_type": "String",
      "membership_type": "Script-defined (path to Javac executable)"
    },
    {
      "name": "distributionUrl",
      "data_type": "String",
      "membership_type": "Script-defined (parsed from properties file)"
    },
    {
      "name": "distributionSha256Sum",
      "data_type": "String",
      "membership_type": "Script-defined (parsed from properties file, optional)"
    },
    {
      "name": "MVN_CMD",
      "data_type": "String",
      "membership_type": "Script-defined (command to execute, 'mvn' or 'mvnd.sh')"
    },
    {
      "name": "MAVEN_USER_HOME",
      "data_type": "String",
      "membership_type": "Script-defined (user's Maven home, can be overridden by env var)"
    },
    {
      "name": "MAVEN_HOME",
      "data_type": "String",
      "membership_type": "Script-defined (path to local Maven distribution)"
    },
    {
      "name": "TMP_DOWNLOAD_DIR",
      "data_type": "String",
      "membership_type": "Script-defined (temporary directory for download)"
    }
  ],
  "functions": [
    "native_path()",
    "set_java_home()",
    "hash_string(str)",
    "verbose(message)",
    "die(message)",
    "trim(string)",
    "exec_maven(args...)",
    "clean()"
  ],
  "dependent_class_list": [
    "java (executable)",
    "javac (executable)",
    "wget (executable, optional)",
    "curl (executable, optional)",
    "unzip (executable, optional)",
    "tar (executable, optional)",
    "sha256sum (executable, optional)",
    "shasum (executable, optional)",
    "Downloader (Java class, dynamically generated by script)"
  ]
}