{
  "file_name": "layout.html",
  "file_path": "src/main/resources/templates/layout.html",
  "file_summary": "This HTML file functions as a central layout template for a web application, specifically designed for a Spring PetClinic project utilizing Thymeleaf for server-side rendering. It defines the core structure of web pages, including the HTML head section with meta-information, character set, viewport settings, favicon, and external CSS links (Font Awesome, petclinic.css). The body contains a responsive navigation bar (`navbar`) with dynamic menu items, which are generated using reusable Thymeleaf fragments. This layout provides placeholders for injecting specific page content (`th:block th:insert=\"${template}\"`) while maintaining a consistent header, navigation, and footer-like section (with a Spring logo). It also includes a Bootstrap JavaScript bundle for interactive components, ensuring a uniform look and feel across the application's views.",
  "attributes": [
    {
      "name": "th:fragment",
      "type": "String",
      "purpose": "Defines a reusable fragment within the template, e.g., 'layout (template, menu)' or 'menuItem (...)'."
    },
    {
      "name": "th:class",
      "type": "String",
      "purpose": "Dynamically sets CSS classes based on Thymeleaf expressions, often used for active menu states."
    },
    {
      "name": "th:href",
      "type": "String",
      "purpose": "Dynamically sets the URL for hyperlinks, often using Thymeleaf's URL expression syntax (@{})."
    },
    {
      "name": "th:text",
      "type": "String",
      "purpose": "Dynamically sets the text content of an element, often used with Thymeleaf's internationalization expressions (#{})."
    },
    {
      "name": "th:src",
      "type": "String",
      "purpose": "Dynamically sets the source URL for images or script files, using Thymeleaf's URL expression syntax."
    },
    {
      "name": "th:remove",
      "type": "String",
      "purpose": "Removes an element from the DOM after Thymeleaf processing (e.g., 'all' to remove the element and its children)."
    },
    {
      "name": "xmlns:th",
      "type": "String",
      "purpose": "Declares the Thymeleaf XML namespace, enabling the use of 'th:' attributes."
    }
  ],
  "functions": [
    {
      "name": "layout(template, menu)",
      "type": "Thymeleaf Fragment",
      "description": "The main layout fragment of the page, accepting 'template' (the specific page content to insert) and 'menu' (to determine the active navigation item) as parameters."
    },
    {
      "name": "menuItem(link, active, title, glyph, text)",
      "type": "Thymeleaf Fragment",
      "description": "A reusable fragment for generating individual navigation bar items, parameterized by the link URL, active state, tooltip title, Font Awesome icon glyph, and display text."
    },
    {
      "name": "th:replace",
      "type": "Thymeleaf Directive",
      "description": "Replaces the current HTML element with the content of a specified Thymeleaf fragment."
    },
    {
      "name": "th:insert",
      "type": "Thymeleaf Directive",
      "description": "Inserts the content of a specified Thymeleaf fragment into the current HTML element, keeping the current element itself."
    }
  ]
}