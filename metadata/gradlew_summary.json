{
  "file_name": "gradle.sh",
  "file_path": "Not specified",
  "file_summary": "This is a POSIX-compliant shell script, typically named `gradle` or `gradlew`, generated by Gradle. Its primary purpose is to bootstrap the Gradle build system on Unix-like operating systems. It dynamically determines the `APP_HOME` (the script's directory) and `APP_BASE_NAME` (the script's name). It identifies the appropriate Java command (`JAVACMD`), checking `JAVA_HOME` or the system `PATH`, and provides helpful error messages if Java is not found. The script performs OS-specific adjustments, particularly for Cygwin, MSYS, and Darwin, to convert file paths to the correct format for the JVM. It attempts to increase the maximum number of open file descriptors (`MAX_FD`) for the process. It meticulously collects and prepares JVM options and program arguments, incorporating `DEFAULT_JVM_OPTS`, `JAVA_OPTS`, and `GRADLE_OPTS` environment variables, ensuring proper parsing of quoted arguments using `xargs`. Finally, it executes the `gradle-wrapper.jar` using the determined `JAVACMD` and collected arguments, effectively starting the Gradle build. The script emphasizes POSIX compliance, avoiding Bash-specific extensions like arrays and carefully handling argument passing to prevent common shell scripting issues.",
  "attributes": [
    {
      "name": "app_path",
      "data_type": "string",
      "membership_type": "Local (temporary for path resolution)",
      "description": "Temporary variable used to resolve the script's actual path by following symlinks."
    },
    {
      "name": "APP_HOME",
      "data_type": "string",
      "membership_type": "Global",
      "description": "The absolute path to the script's home directory after symlink resolution."
    },
    {
      "name": "APP_BASE_NAME",
      "data_type": "string",
      "membership_type": "Global",
      "description": "The base name of the script (e.g., 'gradle')."
    },
    {
      "name": "MAX_FD",
      "data_type": "string | integer",
      "membership_type": "Global",
      "description": "Controls the maximum number of file descriptors; initially 'maximum', then potentially updated to a numeric value."
    },
    {
      "name": "cygwin",
      "data_type": "boolean (string 'true'/'false')",
      "membership_type": "Global",
      "description": "Flag indicating if the script is running on a Cygwin environment."
    },
    {
      "name": "msys",
      "data_type": "boolean (string 'true'/'false')",
      "membership_type": "Global",
      "description": "Flag indicating if the script is running on an MSYS or MinGW environment."
    },
    {
      "name": "darwin",
      "data_type": "boolean (string 'true'/'false')",
      "membership_type": "Global",
      "description": "Flag indicating if the script is running on a Darwin (macOS) environment."
    },
    {
      "name": "nonstop",
      "data_type": "boolean (string 'true'/'false')",
      "membership_type": "Global",
      "description": "Flag indicating if the script is running on a NonStop environment."
    },
    {
      "name": "CLASSPATH",
      "data_type": "string",
      "membership_type": "Global",
      "description": "The initial Java classpath for the JVM, explicitly set to an empty string (escaped)."
    },
    {
      "name": "JAVACMD",
      "data_type": "string",
      "membership_type": "Global",
      "description": "The full path to the determined Java executable command."
    },
    {
      "name": "DEFAULT_JVM_OPTS",
      "data_type": "string",
      "membership_type": "Global",
      "description": "Default JVM options predefined within the script (e.g., memory settings), which are combined with user-defined options."
    },
    {
      "name": "ls",
      "data_type": "string",
      "membership_type": "Local (temporary for path resolution)",
      "description": "Temporary storage for the output of 'ls -ld' during symlink resolution."
    },
    {
      "name": "link",
      "data_type": "string",
      "membership_type": "Local (temporary for path resolution)",
      "description": "Temporary storage for the target of a symlink during path resolution."
    },
    {
      "name": "arg",
      "data_type": "string",
      "membership_type": "Local (loop variable)",
      "description": "Loop variable used when iterating over command-line arguments for path conversion."
    },
    {
      "name": "t",
      "data_type": "string",
      "membership_type": "Local (temporary for path conversion)",
      "description": "Temporary variable used in path conversion logic for Cygwin/MSYS."
    }
  ],
  "functions": [
    {
      "name": "warn",
      "purpose": "Prints a given message to standard error (stderr).",
      "parameters": [
        {
          "name": "message",
          "data_type": "string",
          "description": "The message to be printed. Accepts variadic arguments which are concatenated."
        }
      ],
      "return_type": "void"
    },
    {
      "name": "die",
      "purpose": "Prints a given error message to standard error (stderr) and then exits the script with a non-zero status (1), indicating failure.",
      "parameters": [
        {
          "name": "message",
          "data_type": "string",
          "description": "The error message to be printed. Accepts variadic arguments which are concatenated."
        }
      ],
      "return_type": "none (script exits)"
    }
  ]
}