{
  "file_name": "PetControllerTests.java",
  "file_path": "src/test/java/org/springframework/samples/petclinic/owner/PetControllerTests.java",
  "file_summary": "This Java class, `PetControllerTests`, serves as the integration test suite for the `PetController` in the Spring PetClinic application. It leverages Spring Boot's `@WebMvcTest` to test the web layer, ensuring that the controller handles HTTP requests correctly for pet-related operations. The tests use `MockMvc` to simulate user interactions, verify HTTP responses (status, view names, and model attributes), and check for form validation errors. Key components like `OwnerRepository` and `PetTypeRepository` are mocked using `@MockitoBean` to isolate the `PetController` for focused testing without depending on a real database. The class includes setup logic to pre-populate mock data for owner and pet types. It covers a comprehensive set of scenarios for adding and updating pets, including successful operations and various error cases such as blank names, duplicate names, missing pet types, and invalid birth dates, using `@Nested` classes for better organization of error tests.",
  "attributes": [
    {
      "name": "TEST_OWNER_ID",
      "data_type": "int",
      "membership_type": "private static final"
    },
    {
      "name": "TEST_PET_ID",
      "data_type": "int",
      "membership_type": "private static final"
    },
    {
      "name": "mockMvc",
      "data_type": "MockMvc",
      "membership_type": "private @Autowired"
    },
    {
      "name": "owners",
      "data_type": "OwnerRepository",
      "membership_type": "private @MockitoBean"
    },
    {
      "name": "types",
      "data_type": "PetTypeRepository",
      "membership_type": "private @MockitoBean"
    }
  ],
  "functions": [
    "setup()",
    "testInitCreationForm()",
    "testProcessCreationFormSuccess()",
    "testProcessCreationFormWithBlankName()",
    "testProcessCreationFormWithDuplicateName()",
    "testProcessCreationFormWithMissingPetType()",
    "testProcessCreationFormWithInvalidBirthDate()",
    "testInitUpdateForm()",
    "testProcessUpdateFormSuccess()",
    "testProcessUpdateFormWithInvalidBirthDate()",
    "testProcessUpdateFormWithBlankName()"
  ]
}